#  Template React Deploy

#  This template allows you to deploy your React app to an AWS S3 bucket and invalidate the old AWS Cloudfront distribution.
#  The workflow allows running tests, code linting and security scans on feature branches (as well as master).
#  The react app will be validated, deployed to S3 and trigger an AWS Cloudfront distribution invalidation to refresh the CDN caches after the code is merged to master.

# Prerequisites: $AWS_ACCESS_KEY_ID, $AWS_SECRET_ACCESS_KEY setup in the Deployment variables.
# For advanced cases, please, follow examples from the pipe's:
# README https://bitbucket.org/atlassian/aws-s3-deploy/src/master/README.md
# README https://bitbucket.org/atlassian/aws-cloudfront-invalidate/src/master/README.md

image: node:16

# Workflow Configuration

pipelines:
  default:
    - parallel:
      - step:
          name: Build and Test
          caches:
            - node
          script:
            - npm install
            # CI=true in default variables for Bitbucket Pipelines https://support.atlassian.com/bitbucket-cloud/docs/variables-in-pipelines/
            # - npm test
      - step:
          name: Lint the node package
          script:
            # Run your linter of choice here
            - npm install eslint
            - npx eslint src
          caches:
            - node
  branches:
    # dev:
    #   - step:
    #         name: Build and Test
    #         caches:
    #           - node
    #         script:
    #           - npm install
    #           - npm run build-dev
    #         artifacts:
    #           - dist/**           
    #   - step:
    #       name: Deploy to Development
    #       deployment: Development
    #       trigger: automatic
    #       clone:
    #         enabled: false
    #       script:
    #         # deploy your files to S3
    #         - pipe: atlassian/aws-s3-deploy:1.1.0
    #           variables:
    #             AWS_ACCESS_KEY_ID: AKIAQ3D3EPXQMNABAJNU
    #             AWS_SECRET_ACCESS_KEY: 0LyPkJJR7QjZZiKIpRX8f7ime8SzicAFjBSu77d5
    #             AWS_DEFAULT_REGION: ap-east-1
    #             S3_BUCKET: 'stemdev.digixedu.io'
    #             LOCAL_PATH: 'dist'
    #         # triggering a distribution invalidation to refresh the CDN caches
    #         - pipe: atlassian/aws-cloudfront-invalidate:0.6.0
    #           variables:
    #             AWS_ACCESS_KEY_ID: AKIAQ3D3EPXQMNABAJNU
    #             AWS_SECRET_ACCESS_KEY: 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
    #             # AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    #             DISTRIBUTION_ID: 'E345ILJPYYDZUC'
    # staging:
    #   - step:
    #         name: Build and Test
    #         caches:
    #           - node
    #         script:
    #           - npm install
    #           - npm run build-stage
    #         artifacts:
    #           - dist/**
    #   - step:
    #       name: Deploy to Staging
    #       deployment: Staging
    #       trigger: automatic
    #       clone:
    #         enabled: false
    #       script:
    #         # deploy your files to S3
    #         - pipe: atlassian/aws-s3-deploy:1.1.0
    #           variables:
    #             AWS_ACCESS_KEY_ID: AKIAQ3D3EPXQMNABAJNU
    #             AWS_SECRET_ACCESS_KEY: 0LyPkJJR7QjZZiKIpRX8f7ime8SzicAFjBSu77d5
    #             AWS_DEFAULT_REGION: ap-east-1
    #             S3_BUCKET: 'stemstage.digixedu.io'
    #             LOCAL_PATH: 'dist'
    #         # triggering a distribution invalidation to refresh the CDN caches
    #         - pipe: atlassian/aws-cloudfront-invalidate:0.6.0
    #           variables:
    #             AWS_ACCESS_KEY_ID: AKIAQ3D3EPXQMNABAJNU
    #             AWS_SECRET_ACCESS_KEY: 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
    #             # AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    #             DISTRIBUTION_ID: 'E1UL0T0VM50OE8'
    master:
      - step:
            name: Build and Test
            caches:
              - node
            script:
              - npm install
              - npm run build
            artifacts:
              - dist/**
      - step:
          name: Deploy to Production
          deployment: Production
          trigger: manual
          clone:
            enabled: false
          script:
            # deploy your files to S3
            - pipe: atlassian/aws-s3-deploy:1.1.0
              variables:
                AWS_ACCESS_KEY_ID: AKIAQ3D3EPXQMNABAJNU
                AWS_SECRET_ACCESS_KEY: 0LyPkJJR7QjZZiKIpRX8f7ime8SzicAFjBSu77d5
                AWS_DEFAULT_REGION: ap-southeast-1
                S3_BUCKET: 'aerospace.digixedu.io'
                LOCAL_PATH: 'dist'
            # triggering a distribution invalidation to refresh the CDN caches
            - pipe: atlassian/aws-cloudfront-invalidate:0.6.0
              variables:
                AWS_ACCESS_KEY_ID: AKIAQ3D3EPXQMNABAJNU
                AWS_SECRET_ACCESS_KEY: 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
                # AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                DISTRIBUTION_ID: 'E1TJVVBUJWKLR8'